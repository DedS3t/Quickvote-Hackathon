{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { ListItem, Avatar } from \"@rneui/themed\";\nimport TouchableScale from \"react-native-touchable-scale\";\nimport data from \"../backend_interactions/DataManager\";\nimport FontText from \"../components/FontText\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default (function (_ref) {\n  var navigator = _ref.navigator;\n  var dataIns = new data();\n  var elections = dataIns.getElections();\n  var width = Dimensions.get(\"window\").width;\n  return _jsx(ImageBackground, {\n    source: require(\"../assets/bg_imgs/search.png\"),\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    resizeMode: \"cover\",\n    opacity: 0.3,\n    children: _jsx(FlatList, {\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      },\n      data: elections,\n      contentContainerStyle: {\n        alignItems: \"center\"\n      },\n      style: {\n        marginTop: 75\n      },\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsxs(ListItem, {\n          Component: TouchableScale,\n          friction: 90,\n          tension: 100,\n          activeScale: 0.95,\n          containerStyle: {\n            borderRadius: 100,\n            backgroundColor: item.color\n          },\n          style: {\n            marginVertical: 25,\n            width: width * 0.8\n          },\n          children: [_jsx(ListItem.Content, {\n            children: _jsx(ListItem.Title, {\n              style: {\n                color: \"white\",\n                fontWeight: \"bold\",\n                fontSize: 25,\n                alignSelf: \"center\"\n              },\n              children: _jsx(FontText, {\n                bold: false,\n                children: item.name\n              })\n            })\n          }), _jsx(ListItem.Chevron, {\n            color: \"white\"\n          })]\n        });\n      }\n    })\n  });\n});","map":{"version":3,"names":["ListItem","Avatar","TouchableScale","data","FontText","navigator","dataIns","elections","getElections","width","Dimensions","get","require","height","item","id","toString","alignItems","marginTop","borderRadius","backgroundColor","color","marginVertical","fontWeight","fontSize","alignSelf","name"],"sources":["/home/deds3t/Desktop/coding/quickvote/screens/Search.js"],"sourcesContent":["import {\n  View,\n  Text,\n  FlatList,\n  Dimensions,\n  ImageBackground,\n} from \"react-native\";\nimport { ListItem, Avatar } from \"@rneui/themed\";\nimport TouchableScale from \"react-native-touchable-scale\";\nimport data from \"../backend_interactions/DataManager\";\nimport FontText from \"../components/FontText\";\n\nexport default ({ navigator }) => {\n  let dataIns = new data();\n  let elections = dataIns.getElections();\n  const width = Dimensions.get(\"window\").width;\n\n  return (\n    <ImageBackground\n      source={require(\"../assets/bg_imgs/search.png\")}\n      style={{ width: \"100%\", height: \"100%\" }}\n      resizeMode={\"cover\"}\n      opacity={0.3}\n    >\n      <FlatList\n        keyExtractor={(item) => item.id.toString()}\n        data={elections}\n        contentContainerStyle={{ alignItems: \"center\" }}\n        style={{ marginTop: 75 }}\n        renderItem={({ item }) => (\n          <ListItem\n            Component={TouchableScale}\n            friction={90}\n            tension={100}\n            activeScale={0.95}\n            containerStyle={{ borderRadius: 100, backgroundColor: item.color }}\n            style={{\n              marginVertical: 25,\n              width: width * 0.8,\n            }}\n          >\n            <ListItem.Content>\n              <ListItem.Title\n                style={{\n                  color: \"white\",\n                  fontWeight: \"bold\",\n                  fontSize: 25,\n                  alignSelf: \"center\",\n                }}\n              >\n                <FontText bold={false}>{item.name}</FontText>\n              </ListItem.Title>\n            </ListItem.Content>\n            <ListItem.Chevron color=\"white\" />\n          </ListItem>\n        )}\n      />\n    </ImageBackground>\n  );\n};\n"],"mappings":";;;;;AAOA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,eAAjC;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,IAAP;AACA,OAAOC,QAAP;;;AAEA,gBAAe,gBAAmB;EAAA,IAAhBC,SAAgB,QAAhBA,SAAgB;EAChC,IAAIC,OAAO,GAAG,IAAIH,IAAJ,EAAd;EACA,IAAII,SAAS,GAAGD,OAAO,CAACE,YAAR,EAAhB;EACA,IAAMC,KAAK,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,KAAvC;EAEA,OACE,KAAC,eAAD;IACE,MAAM,EAAEG,OAAO,gCADjB;IAEE,KAAK,EAAE;MAAEH,KAAK,EAAE,MAAT;MAAiBI,MAAM,EAAE;IAAzB,CAFT;IAGE,UAAU,EAAE,OAHd;IAIE,OAAO,EAAE,GAJX;IAAA,UAME,KAAC,QAAD;MACE,YAAY,EAAE,sBAACC,IAAD;QAAA,OAAUA,IAAI,CAACC,EAAL,CAAQC,QAAR,EAAV;MAAA,CADhB;MAEE,IAAI,EAAET,SAFR;MAGE,qBAAqB,EAAE;QAAEU,UAAU,EAAE;MAAd,CAHzB;MAIE,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAb,CAJT;MAKE,UAAU,EAAE;QAAA,IAAGJ,IAAH,SAAGA,IAAH;QAAA,OACV,MAAC,QAAD;UACE,SAAS,EAAEZ,cADb;UAEE,QAAQ,EAAE,EAFZ;UAGE,OAAO,EAAE,GAHX;UAIE,WAAW,EAAE,IAJf;UAKE,cAAc,EAAE;YAAEiB,YAAY,EAAE,GAAhB;YAAqBC,eAAe,EAAEN,IAAI,CAACO;UAA3C,CALlB;UAME,KAAK,EAAE;YACLC,cAAc,EAAE,EADX;YAELb,KAAK,EAAEA,KAAK,GAAG;UAFV,CANT;UAAA,WAWE,KAAC,QAAD,CAAU,OAAV;YAAA,UACE,KAAC,QAAD,CAAU,KAAV;cACE,KAAK,EAAE;gBACLY,KAAK,EAAE,OADF;gBAELE,UAAU,EAAE,MAFP;gBAGLC,QAAQ,EAAE,EAHL;gBAILC,SAAS,EAAE;cAJN,CADT;cAAA,UAQE,KAAC,QAAD;gBAAU,IAAI,EAAE,KAAhB;gBAAA,UAAwBX,IAAI,CAACY;cAA7B;YARF;UADF,EAXF,EAuBE,KAAC,QAAD,CAAU,OAAV;YAAkB,KAAK,EAAC;UAAxB,EAvBF;QAAA,EADU;MAAA;IALd;EANF,EADF;AA0CD,CA/CD"},"metadata":{},"sourceType":"module"}